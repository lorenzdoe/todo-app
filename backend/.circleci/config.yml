version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: cicltechnikum/conint-sem-backend
      TAG: latest
    docker:
      - image: cimg/base:2023.05

# Define the jobs we want to run for this project
jobs:
  lint-test:
    environment:
      NODE_ENV: circleci
    # Primary container image where all commands run
    docker:
      - image: cimg/node:20.0.0
    # service container image
      - image: cimg/mariadb:10.10.3
        name: db
        environment:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: tododot
          MARIADB_USER: todo-admin
          MARIADB_PASSWORD: admin-pw
    steps:
      - checkout
      - run: 
          name: "Install dependencies"
          command: npm install
      - run:
          name: "Linting Stage"
          command: npm run lint
      - run:
          name: "install dockerize"
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: "Wait for db"
          command: dockerize -wait tcp://db:3306 -timeout 1m
      - run: 
          name: "connect to db test"
          command: |
            sudo apt-get update && sudo apt-get install -y mysql-client
            mysql -h db -u todo-admin -padmin-pw -D tododot -e "select 1;" -v
      - run: 
          name: "Testing"
          command: npm run test

  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: "Building"
          command: docker build -t $IMAGE_NAME:$TAG .
      - run:
          name: "Archive Docker image"
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  deliver:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: "Load archived Docker image"
          command: docker load -i /tmp/workspace/image.tar
      - run: 
          name: "Deliver - Publish to docker hub"
          command: | 
            echo "$DOCKER_HUB_PW" | docker login -u cicltechnikum --password-stdin
            docker push $IMAGE_NAME:$TAG

  deploy:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - run: 
          name: "Deploy to EC2 instance"
          command: |
            ssh -o StrictHostKeyChecking=no ubuntu@$AWS_EC2_INSTANCE_IP "nohup ./deploy_script.sh > /dev/null 2>&1 &"
            # nohup used to detach the script execution from the current session and prevent it from being terminated when the SSH session ends
            # > /dev/null redericts output to null also used to run in background

# Orchestrate job run sequence
workflows:
  lint-test-build-deliver-deploy:
    jobs:
      - lint-test
      - build:
          requires:
            - lint-test
      - deliver:
          requires:
            - build
          filters:
            branches:
              only: production
      - deploy:
          requires:
            - deliver
          filters:
            branches:
              only: production

